@page "/prod/Add"
<h3>AddComponent</h3>
<PageTitle>Add new Product</PageTitle>
<EditForm OnValidSubmit="Save" Model="@ProductObj">

        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" class="form-control" @bind-Value="@ProductObj.Name"/>
        <ValidationMessage For="@(()=>ProductObj.Name)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="Price">Price</label>
            <InputNumber id="Price" class="form-control" @bind-Value="@ProductObj.Price"/>
            <ValidationMessage For="@(()=>ProductObj.Price)"></ValidationMessage>

        </div>

        <div class="form-group">
            <label for="Description">Description</label>
        <InputText id="Description" class="form-control" @bind-Value="@ProductObj.Description"/>
            <ValidationMessage For="@(()=>ProductObj.Description)"></ValidationMessage>

        </div>

        <div class="form-group">
            <label for="categoryid">category</label>
            <InputSelect id="categoryid" class="form-control" @bind-Value="@ProductObj.CategoryId">

                <option value="">-- select category --</option>
                @foreach (var category in Categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
        <ValidationMessage For="@(()=>ProductObj.CategoryId)"></ValidationMessage>
        </div>
        <button type="submit" class="btn btn-primary">submit</button>
        <div>
            @ProductObj.ToString();
        </div>
    </EditForm>

@code {

    [Inject]
    public IService<Product> ProductService { get; set; }
    public Product ProductObj { get; set; } = new Product();
    [Inject]
    public IService<Category> categoryService { get; set; }
    public List<Category> Categories { get; set; } = new List<Category>();

    [Inject]
    public NavigationManager Navigation { get; set; } 
    protected override async Task OnInitializedAsync()
    {
        Categories = await categoryService.GetAll();
    }

    public async Task Save()
    {
        if (ProductObj != null)
        {
            Console.WriteLine("Done");
            await ProductService.insert(ProductObj);
            Navigation.NavigateTo("/prod");
        }
    }
}
